{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Menu/Menu.tsx","components/ImageCard/ImageCard.tsx","redux/lacalstorageReducer.ts","redux/settingsReducer.ts","components/SuccessSnackBar/SuccessSnackBar.tsx","components/BookMarks.tsx","api/api.ts","redux/appReducer.ts","utils/error-utils.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","components/SearchBoard/SearchBoard.tsx","components/SearchBoard/SearchBoardContainer.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/ImageCard/ImageCard.module.css","components/SearchBoard/SearchBoard.module.css","components/Menu/Menu.module.css","components/PageNotFound/PageNotFound.module.css"],"names":["Header","style","flexGrow","AppBar","position","Toolbar","Typography","variant","IconButton","color","AccountCircle","Footer","Menu","className","s","menu","Grid","container","direction","alignItems","to","activeClassName","active","Cloud","Bookmarks","ImageCard","props","Card","root","background","CardActionArea","CardMedia","media","image","picture","url","CardContent","itemsText","component","title","CardActions","button","Button","size","onClick","remotePhoto","id","description","initialState","setPicturesAC","photos","type","status","error","undefined","setAppStatusAC","setAppErrorAC","SuccessSnackBar","useSelector","state","settings","dispatch","useDispatch","Snackbar","open","autoHideDuration","onClose","bottom","Alert","severity","value","BookMarks","photo","localstorage","photoId","getState","remotePictureAC","localStorage","setItem","JSON","stringify","removePicture","useEffect","getItem","parse","images","maxHeight","justify","length","map","img","key","appAPI","tags","page","axios","create","baseURL","params","method","api_key","process","extras","format","nojsoncallback","per_page","instance","get","pages","isDisabled","setPhotosAC","setPagesAC","payload","isDisabledAC","Res","res","stat","data","message","handleServerAppError","elevation","ErrorSnackbar","handleClose","event","reason","useStyles","makeStyles","theme","width","margin","iconButton","padding","SearchBoard","nextPage","onChangeHandler","onKeyPressHandler","classes","TextField","label","helperText","onChange","onKeyPress","InputProps","endAdornment","InputAdornment","clearInput","BackspaceOutlined","display","justifyContent","marginRight","disabled","SearchBoardContainer","app","useState","setError","setTitle","addItem","text","trim","then","catch","e","currentTarget","addPictureAC","addPicture","PageNotFound","positionX","setPositionX","positionY","setPositionY","onMouseMove","clientX","clientY","backgroundPositionX","backgroundPositionY","content","App","Container","maxWidth","exact","path","render","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","ph","originalformat","server","secret","filter","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.175a248a.chunk.js","sourcesContent":["import {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\r\nimport {AccountCircle} from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <div style={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        Image Finder\r\n                    </Typography>\r\n                    <div style={{flexGrow: 1}}/>\r\n                    <IconButton color=\"inherit\">\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport function Footer() {\r\n\r\n    return (\r\n        <div style={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                        Copyrights\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import {Grid, IconButton} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {Bookmarks, Cloud} from \"@material-ui/icons\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./Menu.module.css\"\r\n\r\nexport function Menu() {\r\n\r\n    return (\r\n        <div className={s.menu}>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <NavLink to=\"/search\" activeClassName={s.active}>\r\n                    <IconButton>\r\n                        <Cloud/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                <NavLink to=\"/bookmarks\" activeClassName={s.active}>\r\n                    <IconButton>\r\n                        <Bookmarks/>\r\n                    </IconButton>\r\n                </NavLink>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DomainPhotoType} from \"../../redux/appReducer\";\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\nimport s from \"./ImageCard.module.css\"\r\n\r\ntype MediaCardPropsTYpe = {\r\n    picture: DomainPhotoType\r\n    description: string\r\n    remotePhoto: (id: string, picture: DomainPhotoType) => void\r\n}\r\n\r\nexport function ImageCard(props: MediaCardPropsTYpe) {\r\n    return (\r\n        <Card className={s.root} style={{background: \"#ccc\"}}>\r\n            <CardActionArea>\r\n                <CardMedia className={s.media} image={props.picture.url}/>\r\n                <CardContent className={s.itemsText} style={{background: \"#d1d1d1\"}}>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                        {props.picture.title}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={s.button}>\r\n                <Button variant=\"outlined\" size=\"small\" color=\"default\" onClick={() => props.remotePhoto(props.picture.id, props.picture)}>\r\n                    {props.description}\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import {DomainPhotoType} from \"./appReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\ntype InitialStateType = Array<DomainPhotoType>;\r\nconst initialState: InitialStateType = [];\r\n\r\nexport const localStorageReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/LOCALSTORAGE/ADD-PHOTO\":\r\n            return [...state, action.photo]\r\n        case \"APP/LOCALSTORAGE/REMOVE-PHOTO\":\r\n            return [...state.filter(ph => ph.id !== action.photoId)]\r\n        case \"APP/LOCALSTORAGE/SET-PHOTOS\":\r\n            return [...action.photos]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPictureAC>\r\n    | ReturnType<typeof remotePictureAC>\r\n    | ReturnType<typeof setPicturesAC>;\r\n\r\nexport const addPictureAC = (photo: DomainPhotoType) => ({type: \"APP/LOCALSTORAGE/ADD-PHOTO\", photo} as const);\r\nexport const remotePictureAC = (photoId: string) => ({type: \"APP/LOCALSTORAGE/REMOVE-PHOTO\", photoId} as const);\r\nexport const setPicturesAC = (photos: Array<DomainPhotoType>) => ({\r\n    type: \"APP/LOCALSTORAGE/SET-PHOTOS\",\r\n    photos\r\n} as const);\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>;\r\n\r\nexport const addPicture = (photo: DomainPhotoType): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        let state = localStorage.getItem(\"state\");\r\n        state && dispatch(setPicturesAC(JSON.parse(state)));\r\n        dispatch(addPictureAC(photo));\r\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\r\n    }\r\n\r\nexport const removePicture = (photoId: string): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        dispatch(remotePictureAC(photoId));\r\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\r\n    }\r\n\r\nexport const setPictures = (): ThunkType =>\r\n    (dispatch) => {\r\n        let state = localStorage.getItem(\"state\");\r\n        state && dispatch(setPicturesAC(JSON.parse(state)));\r\n    }\r\n","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: undefined as string | undefined\r\n}\r\n\r\nexport type settingsStateType = typeof initialState\r\n\r\nexport const settingsReducer = (state: settingsStateType = initialState, action: ActionsType): settingsStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SETTINGS/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SETTINGS/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type setAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: \"APP/SETTINGS/SET-STATUS\", status} as const);\r\nexport const setAppErrorAC = (error: string | undefined) => ({type: \"APP/SETTINGS/SET-ERROR\", error} as const);\r\n\r\ntype ActionsType = setAppStatusActionType | setAppErrorActionType","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {RequestStatusType, setAppStatusAC} from '../../redux/settingsReducer';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport function SuccessSnackBar(props: { value: string }) {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.settings.status);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = () => {\r\n        dispatch(setAppStatusAC(\"idle\"));\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={status === \"succeeded\"} autoHideDuration={1000} onClose={handleClose}\r\n                  style={{bottom: \"80px\"}}>\r\n            <Alert severity=\"success\">{props.value}</Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {ImageCard} from \"./ImageCard/ImageCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {DomainPhotoType} from \"../redux/appReducer\";\r\nimport {removePicture, setPictures} from \"../redux/lacalstorageReducer\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {SuccessSnackBar} from \"./SuccessSnackBar/SuccessSnackBar\";\r\nimport {setAppStatusAC} from \"../redux/settingsReducer\";\r\nimport s from \"./SearchBoard/SearchBoard.module.css\"\r\n\r\nexport function BookMarks() {\r\n\r\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.localstorage);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPictures())\r\n    }, [])\r\n\r\n    function remotePhoto(photoId: string) {\r\n        dispatch(removePicture(photoId))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n    return (\r\n        <div className={s.images} style={{maxHeight: \"calc(100vh - 128px)\"}}>\r\n            <SuccessSnackBar value=\"Delete picture success!\"/>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                {!!photo.length && photo.map((img, key) => {\r\n                    return <ImageCard key={img.id} picture={img} remotePhoto={remotePhoto} description=\"Remove it!\"/>\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = (tags: string, page: number = 1) => axios.create({\r\n    baseURL: `https://www.flickr.com/services/rest/`,\r\n    params: {\r\n        method: `flickr.photos.search`,\r\n        api_key: process.env.REACT_APP_API_KEY,\r\n        extras: \"original_format\",\r\n        tags,\r\n        page,\r\n        format: 'json',\r\n        nojsoncallback: 1,\r\n        per_page: 15,\r\n    }\r\n})\r\n\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    originalformat?: string\r\n    originalsecret?: string\r\n}\r\n\r\nexport type PhotosType = {\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: number,\r\n    photo: Array<PhotoType>\r\n}\r\n\r\nexport type ResponseType = {\r\n    photos: PhotosType\r\n    stat: string\r\n    code?: number\r\n    message?: string\r\n}\r\n\r\nexport const appAPI = {\r\n    getPictures(tags: string, page?: number) {\r\n        return instance(tags, page).get<ResponseType>(``)\r\n    }\r\n}","import {ThunkAction} from \"redux-thunk\";\r\nimport {appAPI, PhotoType, ResponseType} from \"../api/api\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {handleServerAppError} from \"../utils/error-utils\";\r\nimport {setAppErrorAC, setAppErrorActionType} from \"./settingsReducer\";\r\n\r\nconst initialState: AppInitialStateType = {\r\n    page: 1,\r\n    pages: 0,\r\n    photo: [],\r\n    isDisabled: false\r\n}\r\n\r\nexport type DomainPhotoType = PhotoType & { url: string }\r\n\r\nexport type AppInitialStateType = {\r\n    page: number,\r\n    pages: number,\r\n    photo: Array<DomainPhotoType>,\r\n    isDisabled: boolean\r\n}\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: ActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-PHOTOS\":\r\n            return {\r\n                ...state,\r\n                photo: [\r\n                    ...action.photos.map(ph => {\r\n                        return {\r\n                            ...ph,\r\n                            url: ph.originalformat ?\r\n                                `https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.${ph.originalformat}` :\r\n                                `https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.jpg`\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        case \"APP/REMOVE-PHOTO\":\r\n            return {\r\n                ...state,\r\n                photo: [...state.photo.filter(ph => ph.id !== action.photoId)]\r\n            }\r\n        case \"APP/SET-PAGES\":\r\n            return {...state, ...action.payload}\r\n        case \"APP/NEXT-PAGES\":\r\n            return {...state, page: state.page + 1}\r\n        case \"APP/DISABLED\":\r\n            return {...state, isDisabled: action.isDisabled}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPhotosAC = (photos: Array<PhotoType>) => ({type: \"APP/SET-PHOTOS\", photos} as const);\r\nexport const setPagesAC = (payload: { page: number, pages: number }) => ({type: \"APP/SET-PAGES\", payload} as const);\r\nexport const nextPageAC = () => ({type: \"APP/NEXT-PAGES\"} as const);\r\nexport const remotePhotoAC = (photoId: string) => ({type: \"APP/REMOVE-PHOTO\", photoId} as const);\r\nexport const isDisabledAC = (isDisabled: boolean) => ({type: \"APP/DISABLED\", isDisabled} as const);\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setPhotosAC>\r\n    | ReturnType<typeof remotePhotoAC>\r\n    | ReturnType<typeof setPagesAC>\r\n    | ReturnType<typeof nextPageAC>\r\n    | ReturnType<typeof isDisabledAC>\r\n    | setAppErrorActionType;\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\nexport const setTasksTC = (text: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setPhotosAC([]));\r\n        dispatch(isDisabledAC(true));\r\n        appAPI.getPictures(text)\r\n            .then(res => Res(res.data, dispatch))\r\n            .catch(error => dispatch(setAppErrorAC(error)))\r\n    }\r\n\r\nexport const nextTasksTC = (text: string): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        dispatch(nextPageAC())\r\n        dispatch(isDisabledAC(true));\r\n        appAPI.getPictures(text, getState().app.page)\r\n            .then(res => Res(res.data, dispatch))\r\n            .catch(error => dispatch(setAppErrorAC(error)))\r\n    }\r\n\r\nfunction Res(res: ResponseType, dispatch: any): void {\r\n    if (res.stat === \"ok\") {\r\n        if (res.photos.photo.length) {\r\n            dispatch(setPhotosAC(res.photos.photo));\r\n            dispatch(setPagesAC({page: res.photos.page, pages: res.photos.pages}));\r\n            dispatch(isDisabledAC(false));\r\n        } else {\r\n            dispatch(setAppErrorAC(\"No images found for your query. Please enter a valid query\"))\r\n        }\r\n    } else {\r\n        handleServerAppError(res, dispatch)\r\n    }\r\n}","import { Dispatch } from 'redux';\r\nimport {ResponseType} from \"../api/api\";\r\nimport {setAppErrorAC, setAppErrorActionType, setAppStatusAC, setAppStatusActionType} from \"../redux/settingsReducer\";\r\n\r\n// generic function\r\nexport const handleServerAppError = (data: ResponseType, dispatch: ErrorUtilsDispatchType) => {\r\n    if (data.stat === \"fail\") {\r\n        dispatch(setAppErrorAC(data.message))\r\n    } else {\r\n        dispatch(setAppErrorAC('Some error occurred'))\r\n    }\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\nexport const handleServerNetworkError = (error: {message: string}, dispatch: ErrorUtilsDispatchType) => {\r\n    dispatch(setAppErrorAC(error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<setAppErrorActionType | setAppStatusActionType>","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { AppRootStateType } from '../../redux/store';\r\nimport { setAppErrorAC } from '../../redux/settingsReducer';\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = useSelector<AppRootStateType, string | undefined>(state => state.settings.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(undefined));\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={error !== undefined} autoHideDuration={4000} onClose={handleClose}\r\n        style={{bottom: \"80px\"}}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport {Button, Grid, makeStyles, TextField} from '@material-ui/core';\r\nimport {ImageCard} from \"../ImageCard/ImageCard\";\r\nimport {ErrorSnackbar} from \"../ErrorSnackbar/ErrorSnackbar\";\r\nimport {SuccessSnackBar} from \"../SuccessSnackBar/SuccessSnackBar\";\r\nimport s from \"./SearchBoard.module.css\"\r\nimport {DomainPhotoType} from \"../../redux/appReducer\";\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport {BackspaceOutlined} from '@material-ui/icons';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"90%\",\r\n        margin: \"10px\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n}));\r\n\r\ntype PropType = {\r\n    photo: Array<DomainPhotoType>,\r\n    isDisabled: boolean,\r\n    error: string | null,\r\n    title: string,\r\n    nextPage: () => void,\r\n    clearInput: () => void,\r\n    onChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\r\n    remotePhoto: (id: string, picture: DomainPhotoType) => void\r\n}\r\n\r\nexport function SearchBoard(props: PropType) {\r\n    const {photo, isDisabled, error, title, nextPage, onChangeHandler, onKeyPressHandler, remotePhoto} = props\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <ErrorSnackbar/>\r\n            <SuccessSnackBar value=\"Add picture success!\"/>\r\n            <TextField id=\"outlined-basic\" label=\"Find images\" variant=\"outlined\" className={classes.root}\r\n                       error={!!error} helperText={error}\r\n                       value={title} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}\r\n                       InputProps={{\r\n                           endAdornment: (\r\n                               <InputAdornment position=\"end\" onClick={props.clearInput}>\r\n                                   <IconButton onClick={props.clearInput}>\r\n                                       <BackspaceOutlined/>\r\n                                   </IconButton>\r\n                               </InputAdornment>\r\n                           )\r\n                       }}\r\n            />\r\n\r\n            {!!photo.length &&\r\n            <div>\r\n                <div style={{margin: \"10px\", display: \"flex\", justifyContent: \"flex-end\", marginRight: \"30px\"}}>\r\n                    <Button variant=\"outlined\" onClick={nextPage} disabled={isDisabled}>\r\n                        Next page\r\n                    </Button>\r\n                </div>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={s.images}>\r\n                    {photo.map((img, key) => {\r\n                        return <ImageCard key={img.id} picture={img} remotePhoto={() => remotePhoto(img.id, img)}\r\n                                          description=\"Bookmark it!\"/>\r\n                    })}\r\n                </Grid>\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DomainPhotoType, nextTasksTC, remotePhotoAC, setPagesAC, setPhotosAC, setTasksTC} from \"../../redux/appReducer\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {addPicture} from \"../../redux/lacalstorageReducer\";\r\nimport {setAppStatusAC} from \"../../redux/settingsReducer\";\r\nimport {SearchBoard} from './SearchBoard';\r\n\r\n\r\nexport function SearchBoardContainer() {\r\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.app.photo);\r\n    const isDisabled = useSelector<AppRootStateType, boolean>(state => state.app.isDisabled);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPhotosAC([]))\r\n        dispatch(setPagesAC({page: 1, pages: 0}))\r\n    }, [])\r\n\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [title, setTitle] = useState<string>(\"\");\r\n\r\n    const addItem = () => {\r\n        const trimmedTitle = title.trim()\r\n        if (trimmedTitle !== \"\") {\r\n            dispatch(setTasksTC(title))\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n    }\r\n\r\n    const clearInput = () => {\r\n        setTitle(\"\");\r\n        dispatch(setPhotosAC([]));\r\n    }\r\n\r\n    const nextPage = () => {\r\n        dispatch(nextTasksTC(title))\r\n    }\r\n\r\n    const remotePhoto = (id: string, picture: DomainPhotoType) => {\r\n        dispatch(remotePhotoAC(id))\r\n        dispatch(addPicture(picture))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        e.key === \"Enter\" && addItem()\r\n    }\r\n\r\n    return (\r\n        <SearchBoard photo={photo} isDisabled={isDisabled} error={error} title={title} nextPage={nextPage}\r\n                     onChangeHandler={onChangeHandler} remotePhoto={remotePhoto}\r\n                     onKeyPressHandler={onKeyPressHandler} clearInput={clearInput}/>\r\n    )\r\n}\r\n","import React, {MouseEvent, useState} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./PageNotFound.module.css\"\r\n\r\nexport function PageNotFound() {\r\n\r\n    let [positionX,setPositionX] = useState(\"\")\r\n    let [positionY,setPositionY] = useState(\"\")\r\n\r\n    function move(e: MouseEvent){\r\n        setPositionX(`${-e.clientX/5}px`);\r\n        setPositionY(`${-e.clientY/5}px`);\r\n    }\r\n\r\n    return(\r\n        <div className={s.container} id=\"found\" onMouseMove={move}\r\n             style={{backgroundPositionX: positionX, backgroundPositionY: positionY}}>\r\n            <div className={s.content}>\r\n                <h2>404</h2>\r\n                <h4>Ops! Page not found</h4>\r\n                <p>The page you were looking for doesn't exist. You may have mistyped\r\n                    the address or the page may have moved.</p>\r\n                <NavLink to=\"/search\">Back to home</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header\";\nimport {Container, Grid} from \"@material-ui/core\";\nimport {Footer} from \"./components/Footer\";\nimport {Menu} from './components/Menu/Menu';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport {BookMarks} from \"./components/BookMarks\";\nimport {SearchBoardContainer} from \"./components/SearchBoard/SearchBoardContainer\";\nimport {PageNotFound} from \"./components/PageNotFound/PageNotFound\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Container maxWidth=\"xl\" className=\"container\">\n                <Grid container className=\"grid\" justify=\"flex-start\" direction=\"row\">\n                    <Menu/>\n                    <div className=\"wrap-content\">\n                        <Switch>\n                            <Route exact path=\"/search\" render={() => <SearchBoardContainer/>}/>\n                            <Route path=\"/bookmarks\" render={() => <BookMarks/>}/>\n                            <Route path=\"/404\" render={() => <PageNotFound/>}/>\n                            <Redirect exact from=\"/\" to=\"/search\"/>\n                            <Redirect from=\"*\" to=\"/404\"/>\n                        </Switch>\n                    </div>\n                </Grid>\n            </Container>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {localStorageReducer} from \"./lacalstorageReducer\";\r\nimport {settingsReducer} from \"./settingsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    localstorage: localStorageReducer,\r\n    settings: settingsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsText\":\"ImageCard_itemsText__mpBEr\",\"root\":\"ImageCard_root__36lVf\",\"button\":\"ImageCard_button__25Us5\",\"media\":\"ImageCard_media__mNOZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchBoard_root__STrNM\",\"images\":\"SearchBoard_images__3WZ-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__1xgSW\",\"active\":\"Menu_active__2e5dO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageNotFound_container__wIkto\",\"content\":\"PageNotFound_content__ZAkaW\"};"],"sourceRoot":""}