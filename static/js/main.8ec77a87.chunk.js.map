{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Menu.tsx","api/api.ts","redux/settingsReducer.ts","redux/appReducer.ts","utils/error-utils.ts","components/ImageCard.tsx","redux/lacalstorageReducer.ts","components/ErrorSnackbar/ErrorSnackbar.tsx","components/SuccessSnackBar/SuccessSnackBar.tsx","components/SearchBoard/SearchBoard.tsx","components/BookMarks.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/ImageCard.module.css","components/SearchBoard/SearchBoard.module.css"],"names":["Header","style","flexGrow","AppBar","position","Toolbar","Typography","variant","IconButton","color","AccountCircle","Footer","Menu","Paper","width","background","Grid","container","direction","alignItems","to","Cloud","Bookmarks","appAPI","tags","page","axios","create","baseURL","params","method","api_key","process","extras","format","nojsoncallback","per_page","instance","get","initialState","status","error","undefined","setAppStatusAC","type","setAppErrorAC","pages","photo","setPhotosAC","photos","setPagesAC","payload","Res","res","dispatch","stat","length","data","message","handleServerAppError","ImageCard","props","Card","className","s","root","CardActionArea","CardMedia","media","image","picture","url","CardContent","itemsText","component","title","CardActions","button","Button","size","onClick","remotePhoto","id","description","setPicturesAC","Alert","elevation","ErrorSnackbar","useSelector","state","settings","useDispatch","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","bottom","severity","SuccessSnackBar","value","useStyles","makeStyles","theme","margin","SearchBoard","app","useEffect","classes","useState","setError","setTitle","setTags","addItem","text","trim","then","catch","photoId","getState","localStorage","getItem","JSON","parse","addPictureAC","setItem","stringify","localstorage","addPicture","TextField","label","helperText","onChange","e","currentTarget","onKeyPress","key","display","justifyContent","marginRight","disabled","justify","images","map","img","BookMarks","remotePictureAC","removePicture","maxHeight","withRouter","Container","maxWidth","padding","height","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","ph","originalformat","server","secret","filter","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"4NAIO,SAASA,IAEZ,OACI,qBAAKC,MAAO,CAACC,SAAU,GAAvB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAGA,qBAAKN,MAAO,CAACC,SAAU,KACvB,cAACM,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACI,cAACC,EAAA,EAAD,a,sBCZjB,SAASC,IAEZ,OACI,qBAAKV,MAAO,CAACC,SAAU,GAAvB,SACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKN,MAAO,CAACC,SAAU,GAA3C,8B,sCCJb,SAASU,IAEZ,OACI,cAACC,EAAA,EAAD,CAAOZ,MAAO,CAAEa,MAAO,MAAOC,WAAY,QAA1C,SACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,SAA9C,UACI,cAAC,IAAD,CAASC,GAAG,IAAZ,SACI,cAACZ,EAAA,EAAD,UACI,cAACa,EAAA,EAAD,QAGR,cAAC,IAAD,CAASD,GAAG,aAAZ,SACI,cAACZ,EAAA,EAAD,UACI,cAACc,EAAA,EAAD,a,wFC4BXC,EAAS,SACNC,EAAcC,GACtB,OA7CS,SAACD,GAAD,IAAeC,EAAf,uDAA8B,EAA9B,OAAoCC,IAAMC,OAAO,CAC9DC,QAAQ,wCACRC,OAAQ,CACJC,OAAO,uBACPC,QAASC,mCACTC,OAAQ,kBACRT,OACAC,OACAS,OAAQ,OACRC,eAAgB,EAChBC,SAAU,MAmCHC,CAASb,EAAMC,GAAMa,IAArB,KC7CTC,EAAe,CACjBC,OAAQ,OACRC,WAAOC,GAkBEC,EAAiB,SAACH,GAAD,MAAgC,CAACI,KAAM,0BAA2BJ,WACnFK,EAAgB,SAACJ,GAAD,MAAgC,CAACG,KAAM,yBAA0BH,UCjBxFF,EAAiC,CACnCd,KAAM,EACNqB,MAAO,EACPC,MAAO,IAyCEC,EAAc,SAACC,GAAD,MAA+B,CAACL,KAAM,iBAAkBK,WACtEC,EAAa,SAACC,GAAD,MAA+C,CAACP,KAAM,gBAAiBO,YA6BjG,SAASC,EAAIC,EAAmBC,GACX,OAAbD,EAAIE,KACAF,EAAIJ,OAAOF,MAAMS,QACjBF,EAASN,EAAYK,EAAIJ,OAAOF,QAChCO,EAASJ,EAAW,CAACzB,KAAM4B,EAAIJ,OAAOxB,KAAMqB,MAAOO,EAAIJ,OAAOH,UAE9DQ,EAAST,EAAc,+DCjFC,SAACY,EAAoBH,GACnC,SAAdG,EAAKF,KACLD,EAAST,EAAcY,EAAKC,UAE5BJ,EAAST,EAAc,wBAE3BS,EAASX,EAAe,WD8EpBgB,CAAqBN,EAAKC,G,kEEzE3B,SAASM,EAAUC,GACtB,OACI,eAACC,EAAA,EAAD,CAAMC,UAAWC,IAAEC,KAAnB,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWJ,UAAWC,IAAEI,MAAOC,MAAOR,EAAMS,QAAQC,MACpD,cAACC,EAAA,EAAD,CAAaT,UAAWC,IAAES,UAA1B,SACI,cAACnE,EAAA,EAAD,CAAYC,QAAQ,QAAQE,MAAM,gBAAgBiE,UAAU,IAA5D,SACKb,EAAMS,QAAQK,aAI3B,cAACC,EAAA,EAAD,CAAab,UAAWC,IAAEa,OAA1B,SACI,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQtE,MAAM,UAAUuE,QAAS,kBAAMnB,EAAMoB,YAAYpB,EAAMS,QAAQY,GAAIrB,EAAMS,UAA9F,SACKT,EAAMsB,mBCxB3B,IAAM5C,EAAiC,GAsB1B6C,EAAgB,SAACnC,GAAD,MAAqC,CAC9DL,KAAM,8BACNK,W,kBCrBJ,SAASoC,EAAMxB,GACX,OAAO,cAAC,IAAD,aAAUyB,UAAW,EAAG/E,QAAQ,UAAasD,IAGjD,SAAS0B,IACZ,IAAM9C,EAAQ+C,aAAkD,SAAAC,GAAK,OAAIA,EAAMC,SAASjD,SAClFa,EAAWqC,cAEXC,EAAc,SAACC,EAA8BC,GAChC,cAAXA,GAGJxC,EAAST,OAAcH,KAG3B,OACI,cAACqD,EAAA,EAAD,CAAUC,UAAgBtD,IAAVD,EAAqBwD,iBAAkB,IAAMC,QAASN,EACtE3F,MAAO,CAACkG,OAAQ,QADhB,SAEI,cAAC,EAAD,CAAOD,QAASN,EAAaQ,SAAS,QAAtC,SACK3D,MCpBV,SAAS4D,EAAgBxC,GAC5B,IAAMrB,EAASgD,aAAiD,SAAAC,GAAK,OAAIA,EAAMC,SAASlD,UAClFc,EAAWqC,cAMjB,OACI,cAACI,EAAA,EAAD,CAAUC,KAAiB,cAAXxD,EAAwByD,iBAAkB,IAAMC,QALhD,WAChB5C,EAASX,EAAe,UAKd1C,MAAO,CAACkG,OAAQ,QAD1B,SAEI,cAACd,EAAA,EAAD,CAAOe,SAAS,UAAhB,SAA2BvC,EAAMyC,U,wBCNvCC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCxC,KAAM,CACFnD,MAAO,MACP4F,OAAQ,YAIT,SAASC,KACZ,IAAM5D,EAAQyC,aAAsD,SAAAC,GAAK,OAAIA,EAAMmB,IAAI7D,SACjFD,EAAQ0C,aAAsC,SAAAC,GAAK,OAAIA,EAAMmB,IAAI9D,SACjEQ,EAAWqC,cAEjBkB,qBAAU,WACNvD,EAASN,EAAY,KACrBM,EAASJ,EAAW,CAACzB,KAAM,EAAGqB,MAAO,OACtC,IAEH,IAAMgE,EAAUP,KAVU,EAWAQ,mBAAwB,MAXxB,mBAWnBtE,EAXmB,KAWZuE,EAXY,OAYAD,mBAAS,IAZT,mBAYnBpC,EAZmB,KAYZsC,EAZY,OAaFF,mBAAS,IAbP,mBAanBvF,EAbmB,KAab0F,EAba,KAepBC,EAAU,WACZ,IN6BmBC,EM5BE,KADAzC,EAAM0C,QAEvBH,EAAQ,IACR5D,GN0Be8D,EM1BKzC,EN2B5B,SAACrB,GACGA,EAASN,EAAY,KACrBzB,EAAmB6F,GACdE,MAAK,SAAAjE,GAAG,OAAID,EAAIC,EAAII,KAAMH,MAC1BiE,OAAM,SAAA9E,GAAK,OAAIa,EAAST,EAAcJ,UM9BvCyE,EAAQvC,GACRsC,EAAS,KAETD,EAAS,sBAQX/B,EAAc,SAACC,EAAYZ,GAC7BhB,ENE2C,CAACV,KAAM,mBAAoB4E,QMF/CtC,IACvB5B,EHlBkB,SAACP,GAAD,OACtB,SAACO,EAAUmE,GACP,IAAIhC,EAAQiC,aAAaC,QAAQ,SACjClC,GAASnC,EAAS8B,EAAcwC,KAAKC,MAAMpC,KAC3CnC,EAboB,SAACP,GAAD,MAA6B,CAACH,KAAM,6BAA8BG,SAa7E+E,CAAa/E,IACtB2E,aAAaK,QAAQ,QAASH,KAAKI,UAAUP,IAAWQ,gBGa/CC,CAAW5D,IACpBhB,EAASX,EAAe,eAY5B,OACI,gCACI,cAAC4C,EAAD,IACA,cAACc,EAAD,CAAiBC,MAAM,yBACvB,cAAC6B,EAAA,EAAD,CAAWjD,GAAG,iBAAiBkD,MAAM,cAAc7H,QAAQ,WAAWwD,UAAW+C,EAAQ7C,KAC9ExB,QAASA,EAAO4F,WAAY5F,EAC5B6D,MAAO3B,EAAO2D,SAfT,SAACC,GACrBtB,EAASsB,EAAEC,cAAclC,QAc+BmC,WAXlC,SAACF,GACT,OAAV9F,GAAgBuE,EAAS,MACnB,UAAVuB,EAAEG,KAAmBvB,SAUdpE,EAAMS,QACT,gCACI,qBAAKvD,MAAO,CAACyG,OAAQ,OAAQiC,QAAS,OAAQC,eAAgB,WAAYC,YAAa,QAAvF,SACI,cAAC/D,EAAA,EAAD,CAAQvE,QAAQ,WAAWyE,QA7B1B,WN0BM,IAACoC,EMzBpB9D,GNyBoB8D,EMzBC5F,EN0BzB,SAAC8B,EAAUmE,GACPnE,EAtByB,CAACV,KAAM,mBAuBhCrB,EAAmB6F,EAAMK,IAAWb,IAAInF,MACnC6F,MAAK,SAAAjE,GAAG,OAAID,EAAIC,EAAII,KAAMH,MAC1BiE,OAAM,SAAA9E,GAAK,OAAIa,EAAST,EAAcJ,WMFeqG,UAAWhG,EAAzD,yBAIJ,cAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAM6H,QAAQ,SAAS5H,WAAW,SAAS4C,UAAWC,KAAEgF,OAAlF,SACKjG,EAAMkG,KAAI,SAACC,EAAKR,GACb,OAAO,cAAC9E,EAAD,CAAwBU,QAAS4E,EAAKjE,YAAaA,EACxCE,YAAY,gBADP+D,EAAIhE,eCtE5C,SAASiE,KAEZ,IAAMpG,EAAQyC,aAAsD,SAAAC,GAAK,OAAIA,EAAMwC,gBAC7E3E,EAAWqC,cAMjB,SAASV,EAAYuC,GACjBlE,EJqBqB,SAACkE,GAAD,OACzB,SAAClE,EAAUmE,GACPnE,EAlBuB,SAACkE,GAAD,MAAsB,CAAC5E,KAAM,gCAAiC4E,WAkB5E4B,CAAgB5B,IACzBE,aAAaK,QAAQ,QAASH,KAAKI,UAAUP,IAAWQ,gBIxB/CoB,CAAc7B,IACvBlE,EAASX,EAAe,cAG5B,OATAkE,qBAAU,WACNvD,GJgCJ,SAACA,GACG,IAAImC,EAAQiC,aAAaC,QAAQ,SACjClC,GAASnC,EAAS8B,EAAcwC,KAAKC,MAAMpC,UIjC5C,IAQC,sBAAK1B,UAAWC,KAAEgF,OAAQ/I,MAAO,CAACqJ,UAAW,KAA7C,UACI,cAACjD,EAAD,CAAiBC,MAAM,4BACvB,cAACtF,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAM6H,QAAQ,SAAS5H,WAAW,SAA5D,WACO4B,EAAMS,QAAUT,EAAMkG,KAAI,SAACC,EAAKR,GAC/B,OAAO,cAAC9E,EAAD,CAAwBU,QAAS4E,EAAKjE,YAAaA,EAAaE,YAAY,cAA5D+D,EAAIhE,YCFhCqE,oBAlBf,WACI,OACI,sBAAKxF,UAAU,MAAf,UACI,cAAC/D,EAAD,IACA,cAACwJ,EAAA,EAAD,CAAWC,SAAS,KAAKxJ,MAAO,CAACyJ,QAAS,IAAKC,OAAQ,uBAAvD,SACI,eAAC3I,EAAA,EAAD,CAAMC,WAAS,EAAChB,MAAO,CAAC0J,OAAQ,QAASZ,QAAQ,aAAa7H,UAAU,MAAxE,UACI,cAACN,EAAD,IACA,sBAAKmD,UAAU,eAAf,UACI,cAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAACnD,GAAD,OACpC,cAAC,IAAD,CAAOkD,KAAK,aAAaC,OAAQ,kBAAM,cAACX,GAAD,eAInD,cAACxI,EAAD,UCTGoJ,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCHRO,GAAcC,aAAgB,CAChC5D,IVasB,WAAoF,IAAnFnB,EAAkF,uDAAxDlD,EAAckI,EAA0C,uCACzG,OAAQA,EAAO7H,MACX,IAAK,iBACD,OAAO,2BACA6C,GADP,IAEI1C,MAAM,YACC0H,EAAOxH,OAAOgG,KAAI,SAAAyB,GACjB,OAAO,2BACAA,GADP,IAEInG,IAAKmG,EAAGC,eAAH,wCACgCD,EAAGE,OADnC,YAC6CF,EAAGxF,GADhD,YACsDwF,EAAGG,OADzD,YACmEH,EAAGC,gBADtE,wCAEgCD,EAAGE,OAFnC,YAE6CF,EAAGxF,GAFhD,YAEsDwF,EAAGG,OAFzD,gBAOzB,IAAK,mBACD,OAAO,2BACApF,GADP,IAEI1C,MAAM,YAAK0C,EAAM1C,MAAM+H,QAAO,SAAAJ,GAAE,OAAIA,EAAGxF,KAAOuF,EAAOjD,cAE7D,IAAK,gBACD,OAAO,2BAAI/B,GAAUgF,EAAOtH,SAChC,IAAK,iBACD,OAAO,2BAAIsC,GAAX,IAAkBhE,KAAMgE,EAAMhE,KAAO,IACzC,QACI,OAAOgE,IUtCfwC,aPD+B,WAAoF,IAAnFxC,EAAkF,uDAAxDlD,EAAckI,EAA0C,uCAClH,OAAQA,EAAO7H,MACX,IAAK,6BACD,MAAM,GAAN,mBAAW6C,GAAX,CAAkBgF,EAAO1H,QAC7B,IAAK,gCACD,OAAO,YAAI0C,EAAMqF,QAAO,SAAAJ,GAAE,OAAIA,EAAGxF,KAAOuF,EAAOjD,YACnD,IAAK,8BACD,OAAO,YAAIiD,EAAOxH,QACtB,QACI,OAAOwC,IOPfC,SXA2B,WAAoF,IAAnFD,EAAkF,uDAAxDlD,EAAckI,EAA0C,uCAC9G,OAAQA,EAAO7H,MACX,IAAK,0BACD,OAAO,2BAAI6C,GAAX,IAAkBjD,OAAQiI,EAAOjI,SACrC,IAAK,yBACD,OAAO,2BAAIiD,GAAX,IAAkBhD,MAAOgI,EAAOhI,QACpC,QACI,OAAOgD,MWJNsF,GAAQC,aAAYT,GAAaU,aAAgBC,OCH9DC,IAASrB,OACL,cAAC,IAAD,CAAUiB,MAAOA,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,GAAD,QAGRK,SAASC,eAAe,SAM5BtB,M,mBCpBAuB,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,OAAS,0BAA0B,MAAQ,2B,mBCArID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B","file":"static/js/main.8ec77a87.chunk.js","sourcesContent":["import {AppBar, IconButton, Toolbar, Typography} from '@material-ui/core';\r\nimport {AccountCircle} from '@material-ui/icons';\r\nimport React from 'react';\r\n\r\nexport function Header() {\r\n\r\n    return (\r\n        <div style={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\">\r\n                        Image Finder\r\n                    </Typography>\r\n                    <div style={{flexGrow: 1}}/>\r\n                    <IconButton color=\"inherit\">\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import {AppBar, Toolbar, Typography} from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport function Footer() {\r\n\r\n    return (\r\n        <div style={{flexGrow: 1}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" style={{flexGrow: 1}}>\r\n                        Copyrights\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import {Grid, IconButton, Paper} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {Bookmarks, Cloud} from \"@material-ui/icons\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport function Menu() {\r\n\r\n    return (\r\n        <Paper style={{ width: \"10%\", background: \"#ccc\"}}>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <NavLink to=\"/\">\r\n                    <IconButton>\r\n                        <Cloud/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                <NavLink to=\"/bookmarks\">\r\n                    <IconButton>\r\n                        <Bookmarks/>\r\n                    </IconButton>\r\n                </NavLink>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst instance = (tags: string, page: number = 1) => axios.create({\r\n    baseURL: `https://www.flickr.com/services/rest/`,\r\n    params: {\r\n        method: `flickr.photos.search`,\r\n        api_key: process.env.REACT_APP_API_KEY,\r\n        extras: \"original_format\",\r\n        tags,\r\n        page,\r\n        format: 'json',\r\n        nojsoncallback: 1,\r\n        per_page: 15,\r\n    }\r\n})\r\n\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    originalformat?: string\r\n    originalsecret?: string\r\n}\r\n\r\nexport type PhotosType = {\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: number,\r\n    photo: Array<PhotoType>\r\n}\r\n\r\nexport type ResponseType = {\r\n    photos: PhotosType\r\n    stat: string\r\n    code?: number\r\n    message?: string\r\n}\r\n\r\nexport const appAPI = {\r\n    getPictures(tags: string, page?: number) {\r\n        return instance(tags, page).get<ResponseType>(``)\r\n    }\r\n}","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: undefined as string | undefined\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const settingsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SETTINGS/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SETTINGS/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type setAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: \"APP/SETTINGS/SET-STATUS\", status} as const);\r\nexport const setAppErrorAC = (error: string | undefined) => ({type: \"APP/SETTINGS/SET-ERROR\", error} as const);\r\n\r\ntype ActionsType = setAppStatusActionType | setAppErrorActionType","import {ThunkAction} from \"redux-thunk\";\r\nimport {appAPI, PhotoType, ResponseType} from \"../api/api\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {handleServerAppError} from \"../utils/error-utils\";\r\nimport {setAppErrorAC, setAppErrorActionType} from \"./settingsReducer\";\r\n\r\nconst initialState: InitialStateType = {\r\n    page: 1,\r\n    pages: 0,\r\n    photo: []\r\n}\r\n\r\nexport type DomainPhotoType = PhotoType & { url: string }\r\n\r\ntype InitialStateType = {\r\n    page: number,\r\n    pages: number,\r\n    photo: Array<DomainPhotoType>\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/SET-PHOTOS\":\r\n            return {\r\n                ...state,\r\n                photo: [\r\n                    ...action.photos.map(ph => {\r\n                        return {\r\n                            ...ph,\r\n                            url: ph.originalformat ?\r\n                                `https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.${ph.originalformat}` :\r\n                                `https://live.staticflickr.com/${ph.server}/${ph.id}_${ph.secret}.jpg`\r\n                        }\r\n                    })\r\n                ]\r\n            }\r\n        case \"APP/REMOVE-PHOTO\":\r\n            return {\r\n                ...state,\r\n                photo: [...state.photo.filter(ph => ph.id !== action.photoId)]\r\n            }\r\n        case \"APP/SET-PAGES\":\r\n            return {...state, ...action.payload}\r\n        case \"APP/NEXT-PAGES\":\r\n            return {...state, page: state.page + 1}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPhotosAC = (photos: Array<PhotoType>) => ({type: \"APP/SET-PHOTOS\", photos} as const)\r\nexport const setPagesAC = (payload: { page: number, pages: number }) => ({type: \"APP/SET-PAGES\", payload} as const)\r\nexport const nextPageAC = () => ({type: \"APP/NEXT-PAGES\"} as const)\r\nexport const remotePhotoAC = (photoId: string) => ({type: \"APP/REMOVE-PHOTO\", photoId} as const)\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof setPhotosAC>\r\n    | ReturnType<typeof remotePhotoAC>\r\n    | ReturnType<typeof setPagesAC>\r\n    | ReturnType<typeof nextPageAC>\r\n    | setAppErrorActionType;\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\nexport const setTasksTC = (text: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(setPhotosAC([]))\r\n        appAPI.getPictures(text)\r\n            .then(res => Res(res.data, dispatch))\r\n            .catch(error => dispatch(setAppErrorAC(error)))\r\n    }\r\n\r\nexport const nextTasksTC = (text: string): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        dispatch(nextPageAC())\r\n        appAPI.getPictures(text, getState().app.page)\r\n            .then(res => Res(res.data, dispatch))\r\n            .catch(error => dispatch(setAppErrorAC(error)))\r\n    }\r\n\r\nfunction Res(res: ResponseType, dispatch: any): void {\r\n    if (res.stat === \"ok\") {\r\n        if (res.photos.photo.length) {\r\n            dispatch(setPhotosAC(res.photos.photo))\r\n            dispatch(setPagesAC({page: res.photos.page, pages: res.photos.pages}))\r\n        } else {\r\n            dispatch(setAppErrorAC(\"No images found for your query. Please enter a valid query\"))\r\n        }\r\n    } else {\r\n        handleServerAppError(res, dispatch)\r\n    }\r\n}","import { Dispatch } from 'redux';\r\nimport {ResponseType} from \"../api/api\";\r\nimport {setAppErrorAC, setAppErrorActionType, setAppStatusAC, setAppStatusActionType} from \"../redux/settingsReducer\";\r\n\r\n// generic function\r\nexport const handleServerAppError = (data: ResponseType, dispatch: ErrorUtilsDispatchType) => {\r\n    if (data.stat === \"fail\") {\r\n        dispatch(setAppErrorAC(data.message))\r\n    } else {\r\n        dispatch(setAppErrorAC('Some error occurred'))\r\n    }\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\nexport const handleServerNetworkError = (error: {message: string}, dispatch: ErrorUtilsDispatchType) => {\r\n    dispatch(setAppErrorAC(error.message))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\ntype ErrorUtilsDispatchType = Dispatch<setAppErrorActionType | setAppStatusActionType>","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DomainPhotoType} from \"../redux/appReducer\";\r\nimport {CardContent, Typography} from \"@material-ui/core\";\r\nimport s from \"./ImageCard.module.css\"\r\n\r\ntype MediaCardPropsTYpe = {\r\n    picture: DomainPhotoType\r\n    description: string\r\n    remotePhoto: (id: string, picture: DomainPhotoType) => void\r\n}\r\n\r\nexport function ImageCard(props: MediaCardPropsTYpe) {\r\n    return (\r\n        <Card className={s.root}>\r\n            <CardActionArea>\r\n                <CardMedia className={s.media} image={props.picture.url}/>\r\n                <CardContent className={s.itemsText}>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                        {props.picture.title}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions className={s.button}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => props.remotePhoto(props.picture.id, props.picture)}>\r\n                    {props.description}\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import {DomainPhotoType} from \"./appReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\ntype InitialStateType = Array<DomainPhotoType>;\r\nconst initialState: InitialStateType = [];\r\n\r\nexport const localStorageReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"APP/LOCALSTORAGE/ADD-PHOTO\":\r\n            return [...state, action.photo]\r\n        case \"APP/LOCALSTORAGE/REMOVE-PHOTO\":\r\n            return [...state.filter(ph => ph.id !== action.photoId)]\r\n        case \"APP/LOCALSTORAGE/SET-PHOTOS\":\r\n            return [...action.photos]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionsType =\r\n    ReturnType<typeof addPictureAC>\r\n    | ReturnType<typeof remotePictureAC>\r\n    | ReturnType<typeof setPicturesAC>;\r\n\r\nexport const addPictureAC = (photo: DomainPhotoType) => ({type: \"APP/LOCALSTORAGE/ADD-PHOTO\", photo} as const);\r\nexport const remotePictureAC = (photoId: string) => ({type: \"APP/LOCALSTORAGE/REMOVE-PHOTO\", photoId} as const);\r\nexport const setPicturesAC = (photos: Array<DomainPhotoType>) => ({\r\n    type: \"APP/LOCALSTORAGE/SET-PHOTOS\",\r\n    photos\r\n} as const);\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>;\r\n\r\nexport const addPicture = (photo: DomainPhotoType): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        let state = localStorage.getItem(\"state\");\r\n        state && dispatch(setPicturesAC(JSON.parse(state)));\r\n        dispatch(addPictureAC(photo));\r\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\r\n    }\r\n\r\nexport const removePicture = (photoId: string): ThunkType =>\r\n    (dispatch, getState: () => AppRootStateType) => {\r\n        dispatch(remotePictureAC(photoId));\r\n        localStorage.setItem(\"state\", JSON.stringify(getState().localstorage));\r\n    }\r\n\r\nexport const setPictures = (): ThunkType =>\r\n    (dispatch) => {\r\n        let state = localStorage.getItem(\"state\");\r\n        state && dispatch(setPicturesAC(JSON.parse(state)));\r\n    }\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { AppRootStateType } from '../../redux/store';\r\nimport { setAppErrorAC } from '../../redux/settingsReducer';\r\n\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    const error = useSelector<AppRootStateType, string | undefined>(state => state.settings.error);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        dispatch(setAppErrorAC(undefined));\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={error !== undefined} autoHideDuration={4000} onClose={handleClose}\r\n        style={{bottom: \"80px\"}}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n                {error}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from '../../redux/store';\r\nimport {RequestStatusType, setAppStatusAC} from '../../redux/settingsReducer';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport function SuccessSnackBar(props: { value: string }) {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.settings.status);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClose = () => {\r\n        dispatch(setAppStatusAC(\"idle\"));\r\n    }\r\n\r\n    return (\r\n        <Snackbar open={status === \"succeeded\"} autoHideDuration={1000} onClose={handleClose}\r\n                  style={{bottom: \"80px\"}}>\r\n            <Alert severity=\"success\">{props.value}</Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n","import {Button, Grid, makeStyles, TextField} from '@material-ui/core';\r\nimport React, {ChangeEvent, KeyboardEvent, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {DomainPhotoType, nextTasksTC, remotePhotoAC, setPagesAC, setPhotosAC, setTasksTC} from \"../../redux/appReducer\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {ImageCard} from \"../ImageCard\";\r\nimport {addPicture} from \"../../redux/lacalstorageReducer\";\r\nimport {ErrorSnackbar} from \"../ErrorSnackbar/ErrorSnackbar\";\r\nimport {setAppStatusAC} from \"../../redux/settingsReducer\";\r\nimport {SuccessSnackBar} from \"../SuccessSnackBar/SuccessSnackBar\";\r\nimport s from \"./SearchBoard.module.css\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"90%\",\r\n        margin: \"10px\"\r\n    }\r\n}));\r\n\r\nexport function SearchBoard() {\r\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.app.photo);\r\n    const pages = useSelector<AppRootStateType, number>(state => state.app.pages);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPhotosAC([]))\r\n        dispatch(setPagesAC({page: 1, pages: 0}))\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [title, setTitle] = useState(\"\");\r\n    const [tags, setTags] = useState(\"\");\r\n\r\n    const addItem = () => {\r\n        const trimmedTitle = title.trim()\r\n        if (trimmedTitle !== \"\") {\r\n            setTags(\"\")\r\n            dispatch(setTasksTC(title))\r\n            setTags(title)\r\n            setTitle(\"\")\r\n        } else {\r\n            setError(\"Title is required\")\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        dispatch(nextTasksTC(tags))\r\n    }\r\n\r\n    const remotePhoto = (id: string, picture: DomainPhotoType) => {\r\n        dispatch(remotePhotoAC(id))\r\n        dispatch(addPicture(picture))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        e.key === \"Enter\" && addItem()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ErrorSnackbar/>\r\n            <SuccessSnackBar value=\"Add picture success!\"/>\r\n            <TextField id=\"outlined-basic\" label=\"Find images\" variant=\"outlined\" className={classes.root}\r\n                       error={!!error} helperText={error}\r\n                       value={title} onChange={onChangeHandler} onKeyPress={onKeyPressHandler}/>\r\n            {!!photo.length &&\r\n            <div>\r\n                <div style={{margin: \"10px\", display: \"flex\", justifyContent: \"flex-end\", marginRight: \"30px\"}}>\r\n                    <Button variant=\"outlined\" onClick={nextPage} disabled={!pages}>\r\n                        Next page\r\n                    </Button>\r\n                </div>\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={s.images}>\r\n                    {photo.map((img, key) => {\r\n                        return <ImageCard key={img.id} picture={img} remotePhoto={remotePhoto}\r\n                                          description=\"Bookmark it!\"/>\r\n                    })}\r\n                </Grid>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {ImageCard} from \"./ImageCard\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/store\";\r\nimport {DomainPhotoType} from \"../redux/appReducer\";\r\nimport {removePicture, setPictures} from \"../redux/lacalstorageReducer\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {SuccessSnackBar} from \"./SuccessSnackBar/SuccessSnackBar\";\r\nimport {setAppStatusAC} from \"../redux/settingsReducer\";\r\nimport s from \"./SearchBoard/SearchBoard.module.css\"\r\n\r\nexport function BookMarks() {\r\n\r\n    const photo = useSelector<AppRootStateType, Array<DomainPhotoType>>(state => state.localstorage);\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPictures())\r\n    }, [])\r\n\r\n    function remotePhoto(photoId: string) {\r\n        dispatch(removePicture(photoId))\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n\r\n    return (\r\n        <div className={s.images} style={{maxHeight: 600}}>\r\n            <SuccessSnackBar value=\"Delete picture success!\"/>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                {!!photo.length && photo.map((img, key) => {\r\n                    return <ImageCard key={img.id} picture={img} remotePhoto={remotePhoto} description=\"Remove it!\"/>\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header\";\nimport {Container, Grid} from \"@material-ui/core\";\nimport {Footer} from \"./components/Footer\";\nimport {Menu} from './components/Menu';\nimport {Route, withRouter} from 'react-router-dom';\nimport {SearchBoard} from \"./components/SearchBoard/SearchBoard\";\nimport {BookMarks} from \"./components/BookMarks\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Container maxWidth=\"xl\" style={{padding: \"0\", height: \"calc(100vh - 128px)\"}}>\n                <Grid container style={{height: \"100%\"}} justify=\"flex-start\" direction=\"row\">\n                    <Menu/>\n                    <div className=\"wrap-content\">\n                        <Route exact path=\"/\" render={() => <SearchBoard/>}/>\n                        <Route path=\"/bookmarks\" render={() => <BookMarks/>}/>\n                    </div>\n                </Grid>\n            </Container>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withRouter(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {localStorageReducer} from \"./lacalstorageReducer\";\r\nimport {settingsReducer} from \"./settingsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    localstorage: localStorageReducer,\r\n    settings: settingsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsText\":\"ImageCard_itemsText__3UNQ8\",\"root\":\"ImageCard_root__2lzrc\",\"button\":\"ImageCard_button__2JSHj\",\"media\":\"ImageCard_media__3demy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchBoard_root__STrNM\",\"images\":\"SearchBoard_images__3WZ-q\"};"],"sourceRoot":""}